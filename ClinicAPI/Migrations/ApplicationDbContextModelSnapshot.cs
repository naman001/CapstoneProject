// <auto-generated />
using ClinicAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClinicAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClinicAPI.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("ClinicAPI.Models.Doctor", b =>
                {
                    b.Property<int>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DocId = 1,
                            DocName = "Doctor A"
                        },
                        new
                        {
                            DocId = 2,
                            DocName = "Doctor B"
                        },
                        new
                        {
                            DocId = 3,
                            DocName = "Doctor C"
                        });
                });

            modelBuilder.Entity("ClinicAPI.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            PatientName = "Mr.A"
                        },
                        new
                        {
                            PatientId = 2,
                            PatientName = "Mrs.B"
                        });
                });

            modelBuilder.Entity("ClinicAPI.Models.ReservedSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocId")
                        .HasColumnType("int");

                    b.Property<string>("End")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("DocId");

                    b.HasIndex("PatientId");

                    b.HasIndex("SlotId");

                    b.ToTable("ReservedSchedules");
                });

            modelBuilder.Entity("ClinicAPI.Models.TimeSlot", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SlotDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SlotId");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            SlotId = 1,
                            SlotDesc = "T08:00:00,T09:30:00"
                        },
                        new
                        {
                            SlotId = 2,
                            SlotDesc = "T09:30:00,T11:00:00"
                        },
                        new
                        {
                            SlotId = 3,
                            SlotDesc = "T11:00:00,T12:30:00"
                        },
                        new
                        {
                            SlotId = 4,
                            SlotDesc = "T14:00:00,T15:30:00"
                        },
                        new
                        {
                            SlotId = 5,
                            SlotDesc = "T15:30:00,T17:00:00"
                        },
                        new
                        {
                            SlotId = 6,
                            SlotDesc = "T17:00:00,T18:30:00"
                        });
                });

            modelBuilder.Entity("ClinicAPI.Models.Appointment", b =>
                {
                    b.HasOne("ClinicAPI.Models.ReservedSchedule", "ReservedSchedule")
                        .WithMany("Appointments")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservedSchedule");
                });

            modelBuilder.Entity("ClinicAPI.Models.ReservedSchedule", b =>
                {
                    b.HasOne("ClinicAPI.Models.Doctor", "Doctor")
                        .WithMany("ReservedSchedules")
                        .HasForeignKey("DocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicAPI.Models.Patient", "Patient")
                        .WithMany("reservedSchedules")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicAPI.Models.TimeSlot", "TimeSlot")
                        .WithMany("ReservedSchedules")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("ClinicAPI.Models.Doctor", b =>
                {
                    b.Navigation("ReservedSchedules");
                });

            modelBuilder.Entity("ClinicAPI.Models.Patient", b =>
                {
                    b.Navigation("reservedSchedules");
                });

            modelBuilder.Entity("ClinicAPI.Models.ReservedSchedule", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("ClinicAPI.Models.TimeSlot", b =>
                {
                    b.Navigation("ReservedSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
